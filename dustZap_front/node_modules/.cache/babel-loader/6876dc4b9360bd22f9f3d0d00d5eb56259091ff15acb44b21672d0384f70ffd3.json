{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blues\\\\Workspace\\\\dust\\\\src\\\\App.jsx\";\nimport styled from \"styled-components\";\nimport Outside from \"./component/Outside.jsx\";\nimport InsideDust from \"./component/InsideDust.jsx\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  font-style: normal;\n  background-color: ${props => props.boxColor};\n`;\n_c = Wrapper;\nfunction App() {\n  const Dustset = 88;\n  let selectDust = \"\";\n  if (Dustset >= 0 && Dustset <= 30) {\n    selectDust = \"good\";\n  } else if (Dustset > 30 && Dustset <= 80) {\n    selectDust = \"average\";\n  } else if (Dustset > 80 && Dustset <= 150) {\n    selectDust = \"bad\";\n  } else if (Dustset > 150) {\n    selectDust = \"very_bad\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      boxColor: DUMMY_DATA[props.Dust].color,\n      children: [/*#__PURE__*/_jsxDEV(InsideDust, {\n        Dust: selectDust,\n        DustRate: Dustset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outside, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["styled","Outside","InsideDust","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","props","boxColor","_c","App","Dustset","selectDust","children","DUMMY_DATA","Dust","color","DustRate","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/blues/Workspace/dust/src/App.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport Outside from \"./component/Outside.jsx\";\nimport InsideDust from \"./component/InsideDust.jsx\";\nimport \"./App.css\";\n\nconst Wrapper = styled.div`\n  font-style: normal;\n  background-color: ${(props) => props.boxColor};\n`;\n\nfunction App() {\n  const Dustset = 88;\n  let selectDust = \"\";\n\n  if (Dustset >= 0 && Dustset <= 30) {\n    selectDust = \"good\";\n  } else if (Dustset > 30 && Dustset <= 80) {\n    selectDust = \"average\";\n  } else if (Dustset > 80 && Dustset <= 150) {\n    selectDust = \"bad\";\n  } else if (Dustset > 150) {\n    selectDust = \"very_bad\";\n  }\n\n  return (\n    <>\n      <Wrapper boxColor={DUMMY_DATA[props.Dust].color}>\n        <InsideDust Dust={selectDust} DustRate={Dustset}></InsideDust>\n        <Outside></Outside>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAG;AAC1B;AACA,sBAAuBC,KAAK,IAAKA,KAAK,CAACC,QAAQ;AAC/C,CAAC;AAACC,EAAA,GAHIJ,OAAO;AAKb,SAASK,GAAGA,CAAA,EAAG;EACb,MAAMC,OAAO,GAAG,EAAE;EAClB,IAAIC,UAAU,GAAG,EAAE;EAEnB,IAAID,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAI,EAAE,EAAE;IACjCC,UAAU,GAAG,MAAM;EACrB,CAAC,MAAM,IAAID,OAAO,GAAG,EAAE,IAAIA,OAAO,IAAI,EAAE,EAAE;IACxCC,UAAU,GAAG,SAAS;EACxB,CAAC,MAAM,IAAID,OAAO,GAAG,EAAE,IAAIA,OAAO,IAAI,GAAG,EAAE;IACzCC,UAAU,GAAG,KAAK;EACpB,CAAC,MAAM,IAAID,OAAO,GAAG,GAAG,EAAE;IACxBC,UAAU,GAAG,UAAU;EACzB;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACG,OAAO;MAACG,QAAQ,EAAEM,UAAU,CAACP,KAAK,CAACQ,IAAI,CAAC,CAACC,KAAM;MAAAH,QAAA,gBAC9CX,OAAA,CAACF,UAAU;QAACe,IAAI,EAAEH,UAAW;QAACK,QAAQ,EAAEN;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC9DnB,OAAA,CAACH,OAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACV,CAAC;AAEP;AAACC,GAAA,GAtBQZ,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}