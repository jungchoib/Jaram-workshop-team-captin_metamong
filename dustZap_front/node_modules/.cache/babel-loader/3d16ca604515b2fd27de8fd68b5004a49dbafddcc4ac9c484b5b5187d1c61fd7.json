{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blues\\\\Workspace\\\\dust\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport Outside from \"./component/Outside.jsx\";\nimport InsideDust from \"./component/InsideDust.jsx\";\nimport \"./App.css\";\nimport { DUMMY_DATA } from \"./data.js\";\nimport CustomPopup from \"./component/Popup.jsx\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"./component/Button.jsx\";\nimport { ref, onValue, off } from \"firebase/database\";\nimport { database } from \"./firebase\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nApp.propTypes = {\n  Dustset: PropTypes\n};\nconst Wrapper = styled.div`\n  font-style: normal;\n  background: linear-gradient(white, ${props => props.boxColor});\n  padding: 0;\n`;\n_c = Wrapper;\nfunction App() {\n  _s();\n  const [visibility, setVisibility] = useState(false);\n  const popupCloseHandler = e => {\n    setVisibility(e);\n  };\n  const [dustRate, setDustRate] = useState(\"\");\n  useEffect(() => {\n    const airQualityRef = ref(database, \"/air_quality/dust\");\n    const listener = onValue(airQualityRef, snapshot => {\n      const ip = snapshot.val();\n      setDustRate(ip);\n    });\n\n    // Clean up the subscription\n    return () => off(airQualityRef, listener);\n  }, []);\n\n  //const Dustset = 19.2;\n\n  const Dustset = {\n    dustRate\n  };\n  let selectDust = \"\";\n  if (Dustset <= 30) {\n    selectDust = \"good\";\n  } else if (Dustset > 30 && Dustset <= 80) {\n    selectDust = \"average\";\n  } else if (Dustset > 80 && Dustset <= 150) {\n    selectDust = \"bad\";\n  } else if (Dustset > 150) {\n    selectDust = \"very_bad\";\n  }\n\n  // if (dustRate === 1) {\n  //   selectDust = \"good\";\n  // } else if (dustRate === 2) {\n  //   selectDust = \"average\";\n  // } else if (dustRate === 3) {\n  //   selectDust = \"bad\";\n  // } else if (dustRate === 4) {\n  //   selectDust = \"very_bad\";\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      boxColor: DUMMY_DATA[selectDust].color,\n      children: [/*#__PURE__*/_jsxDEV(InsideDust, {\n        Dust: selectDust,\n        DustRate: Dustset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dustRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => setVisibility(!visibility),\n          children: \"\\uC57C\\uC678 \\uBBF8\\uC138\\uBA3C\\uC9C0\\uB294?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomPopup, {\n          onClose: popupCloseHandler,\n          show: visibility,\n          title: \" \\uC57C\\uC678 \\uBBF8\\uC138\\uBA3C\\uC9C0\\uB294?\",\n          children: /*#__PURE__*/_jsxDEV(Outside, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"2XQS8yLwOydKybBhFGa9uTgYdXM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["styled","Outside","InsideDust","DUMMY_DATA","CustomPopup","useState","useEffect","Button","ref","onValue","off","database","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","propTypes","Dustset","Wrapper","div","props","boxColor","_c","_s","visibility","setVisibility","popupCloseHandler","e","dustRate","setDustRate","airQualityRef","listener","snapshot","ip","val","selectDust","children","color","Dust","DustRate","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onClose","show","title","_c2","$RefreshReg$"],"sources":["C:/Users/blues/Workspace/dust/src/App.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport Outside from \"./component/Outside.jsx\";\nimport InsideDust from \"./component/InsideDust.jsx\";\nimport \"./App.css\";\nimport { DUMMY_DATA } from \"./data.js\";\nimport CustomPopup from \"./component/Popup.jsx\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"./component/Button.jsx\";\nimport { ref, onValue, off } from \"firebase/database\";\nimport { database } from \"./firebase\";\nimport PropTypes from 'prop-types'\n\nApp.propTypes = {\n  Dustset: PropTypes\n}\n\nconst Wrapper = styled.div`\n  font-style: normal;\n  background: linear-gradient(white, ${(props) => props.boxColor});\n  padding: 0;\n`;\n\nfunction App() {\n  const [visibility, setVisibility] = useState(false);\n\n  const popupCloseHandler = (e) => {\n    setVisibility(e);\n  };\n\n  const [dustRate, setDustRate] = useState(\"\");\n\n  useEffect(() => {\n    const airQualityRef = ref(database, \"/air_quality/dust\");\n    const listener = onValue(airQualityRef, (snapshot) => {\n      const ip = snapshot.val();\n      setDustRate(ip);\n    });\n\n    // Clean up the subscription\n    return () => off(airQualityRef, listener);\n  }, []);\n\n  //const Dustset = 19.2;\n\n  const Dustset = {dustRate};\n\n  let selectDust = \"\";\n  if (Dustset <= 30) {\n    selectDust = \"good\";\n  } else if (Dustset > 30 && Dustset <= 80) {\n    selectDust = \"average\";\n  } else if (Dustset > 80 && Dustset <= 150) {\n    selectDust = \"bad\";\n  } else if (Dustset > 150) {\n    selectDust = \"very_bad\";\n  }\n\n  // if (dustRate === 1) {\n  //   selectDust = \"good\";\n  // } else if (dustRate === 2) {\n  //   selectDust = \"average\";\n  // } else if (dustRate === 3) {\n  //   selectDust = \"bad\";\n  // } else if (dustRate === 4) {\n  //   selectDust = \"very_bad\";\n  // }\n\n  return (\n    <>\n      <Wrapper boxColor={DUMMY_DATA[selectDust].color}>\n        <InsideDust Dust={selectDust} DustRate={Dustset}></InsideDust>\n        <div>{dustRate}</div>\n        <div className=\"App\">\n          <Button onClick={(e) => setVisibility(!visibility)}>\n            야외 미세먼지는?\n          </Button>\n          <CustomPopup\n            onClose={popupCloseHandler}\n            show={visibility}\n            title=\" 야외 미세먼지는?\"\n          >\n            <Outside></Outside>\n          </CustomPopup>\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}